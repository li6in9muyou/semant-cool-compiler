#!/usr/bin/env bash

actual() {
  mylexer "$1" | myparser | ./semant 2>&1
}

expected() {
  lexer "$1" | parser | semant 2>&1
}

green() {
  printf "\033[0;32m%s\033[0m\n" "$1"
}

red() {
  printf "\033[0;31m%s\033[0m\n" "$1"
}

yellow() {
  printf "\033[0;33m%s\033[0m\n" "$1"
}

sort_by_lineno() {
  sort -n -t ":" -k 2
}

do_make=true

while getopts "q" opt; do
  case $opt in
  q) do_make=false ;;
  *) printf "-q: skip \"make semant\"" && exit 1 ;;
  esac
done
shift $((OPTIND - 1))

case $do_make in
true)
  if ! make -j8 semant; then
    red "BUILD FAILED"
    exit 1
  fi
  ;;
esac

for input_cl in "$@"; do
  echo
  yellow "$input_cl"
  if [[ ! -f "$input_cl" ]]; then
    red "FILE NOT FOUND"
    continue
  fi

  if diff -u --color \
    --label actual <(actual "$input_cl" | grep --invert-match "|" | sort_by_lineno) \
    --label expected <(expected "$input_cl" | sort_by_lineno); then
    green PASS
  else
    red FAIL
  fi
done
